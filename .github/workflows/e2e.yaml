name: e2e

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Run pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt
      - run: pytest tests/foo.py
  publish:
    name: Publish App to GCS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: 'main.py'
          destination: 'maan-artifacts/'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TF_VAR_project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_KEY }}'
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6
      - id: destroy
        run: cd infrastructure/maan && terraform init && terraform destroy -no-color -input=false -target=module.compute_instance -auto-approve
      - id: apply
        run: cd infrastructure/maan && terraform init && terraform apply -no-color -input=false -target=module.compute_instance -auto-approve
      - id: output
        run: echo 'access app at `terraform output -json | jq ".compute_instance_ip.value[0].network_interface[0].access_config[0].nat_ip"`:8080'
      